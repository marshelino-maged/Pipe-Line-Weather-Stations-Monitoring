apiVersion: v1
kind: Pod
metadata:
  name: station-1
spec:
  containers:
    - name: station
      image: weather_station
      imagePullPolicy: Never
      env:
        - name: STATION_ID
          value: "1"
        - name: KAFKA_BROKER
          value: "kafka:9092"
        - name: KAFKA_TOPIC
          value: "weather_topic"
---
apiVersion: v1
kind: Pod
metadata:
  name: station-2
spec:
  containers:
    - name: station
      image: weather_station
      imagePullPolicy: Never
      env:
        - name: STATION_ID
          value: "2"
        - name: KAFKA_BROKER
          value: "kafka:9092"
        - name: KAFKA_TOPIC
          value: "weather_topic"
---
apiVersion: v1
kind: Pod
metadata:
  name: station-3
spec:
  containers:
    - name: station
      image: weather_station
      imagePullPolicy: Never
      env:
        - name: STATION_ID
          value: "3"
        - name: KAFKA_BROKER
          value: "kafka:9092"
        - name: KAFKA_TOPIC
          value: "weather_topic"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  selector:
    app: kafka
  ports:
    - port: 9092
      targetPort: 9092
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka
  replicas: 1
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
        - name: init-create-topics
          image: apache/kafka:latest
          command:
            - sh
            - -c
            - |
              echo "Waiting for Kafka to be available..."
              until /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --list > /dev/null 2>&1; do
                sleep 5
              done
              echo "Creating topics..."
              /opt/kafka/bin/kafka-topics.sh --create --topic weather_topic --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1
              echo "Done creating topics."
      containers:
        - name: kafka
          image: apache/kafka:latest
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://:9092,CONTROLLER://:9093"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:9092"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@localhost:9093"
